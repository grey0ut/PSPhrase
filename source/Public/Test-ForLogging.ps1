# run-once code at module import.
# if on Windows check for the presence of output logging and warn user.

# check to see if we're on Windows or not
if ($IsWindows -or $ENV:OS) {
    $LMPolicyPath = 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\PowerShell'
    $CUPolicyPath = 'HKCU:\SOFTWARE\Policies\Microsoft\Windows\PowerShell'
    $LMTranscriptPath = '{0}\transcription' -f $LMPolicyPath
    $CUTranscriptPath = '{0}\transcription' -f $CUPolicyPath
    if (Test-Path $LMPolicyPath) {
        if (Test-Path $LMTranscriptPath) {
            $LMTranscripting = Get-ItemProperty -Path $LMTranscriptPath -Name 'EnableTranscripting'
            if ([bool]$LMTranscripting.EnableTranscripting) {
                Write-Warning "PowerShell transcripting detected!"
                Write-Warning "All console output is logged. Any passphrases generated by this module may be observed by others."
                Write-Warning "Consider piping output to Out-GridView, Out-File or Set-Clipboard to avoid output ending up in logs."
            }
        }
    } elseif (Test-Path $CUPolicyPath) {
        if (Test-Path $CUTranscriptPath) {
            $CUTranscripting = Get-ItemProperty -Path $CUTranscriptPath -Name 'EnableTranscripting'
            if ([bool]$CUTranscripting.EnableTranscripting) {
                Write-Warning "PowerShell transcripting detected!"
                Write-Warning "All console output is logged. Any passphrases generated by this module may be observed by others."
                Write-Warning "Consider piping output to Out-GridView, Out-File or Set-Clipboard to avoid output ending up in logs."
            }
        }
    }
}